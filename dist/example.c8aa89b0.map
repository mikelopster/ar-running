{"version":3,"sources":["example/components/enemy.js","example/primatives/a-enemy.js","example/index.js"],"names":["AFRAME","registerComponent","type","directionVec3","THREE","Vector3","el","addEventListener","entity","parentNode","removeChild","time","timeDelta","targetPosition","x","y","z","log","currentPosition","object3D","position","copy","sub","distance","length","factor","data","speed","forEach","axis","setAttribute","extendDeep","utils","meshMixin","primitives","getMeshMixin","registerPrimitive","primitive","window","onload","newEnemy","document","createElement","getElementById","appendChild"],"mappings":";AAAAA,OAAOC,kBAAkB,SACf,QACC,OAACC,KAAM,WAEV,KAAA,WAAY,IAAA,EAAA,KACXC,KAAAA,cAAgB,IAAIC,MAAMC,QAE1BC,KAAAA,GAAGC,iBAAiB,QAAS,WAC1B,MAAA,WACFC,IAAAA,EAAS,EAAKF,GACXG,EAAAA,WAAWC,YAAYF,MAG5B,KAAA,SAAUG,EAAMC,GAChBT,IAAAA,EAAgB,KAAKA,cACrBU,EAAiB,IAAIT,MAAMC,QAChBS,EAAAA,EAAI,EACJC,EAAAA,EAAI,EACJC,EAAAA,EAAI,EACXC,QAAAA,IAAId,GAERe,IAAAA,EAAkB,KAAKZ,GAAGa,SAASC,SAEzBC,EAAAA,KAAKR,GAAgBS,IAAIJ,GAEnCK,IAAAA,EAAWpB,EAAcqB,SAEzBD,KAAAA,EAAW,GAAXA,CAIAE,IAAAA,EAAS,KAAKC,KAAKC,MAAQJ,GACnB,IAAK,IAAK,KACjBK,QAAQ,SAAUC,GACPA,EAAAA,IAAmB,KAAVJ,IAGpBnB,KAAAA,GAAGwB,aAAa,YAChBZ,EAAAA,EAAgBJ,EAAIX,EAAcW,EAClCI,EAAAA,EAAgBH,EAAIZ,EAAcY,EAClCG,EAAAA,EAAgBF,EAAIb,EAAca;;ACxC3C,IAAMe,EAAa/B,OAAOgC,MAAMD,WAE1BE,EAAYjC,OAAOkC,WAAWC,eAEpCnC,OAAOoC,kBAAkB,UAAWL,KAAeE,GAC9B,mBACV,OAAEN,MAAO,QACN,UAACU,UAAW,OACf,MAAA,eAEC,UACD,MAAA,iBACC,OAAA,kBACD,MAAA,iBACC,OAAA;;ACVZ,aAJA,QAAA,sBAEA,QAAA,wBAEAC,OAAOC,OAAS,WACVC,IAAAA,EAAYC,SAASC,cAAc,WAC9BC,SAAAA,eAAe,SAASC,YAAYJ","file":"example.c8aa89b0.map","sourceRoot":"../..","sourcesContent":["AFRAME.registerComponent('enemy', {\n  schema: {\n    speed: {type: 'number'}\n  },\n  init: function () {\n    this.directionVec3 = new THREE.Vector3()\n\n    this.el.addEventListener('click', () => {\n      alert('destroy')\n      let entity = this.el\n      entity.parentNode.removeChild(entity)\n    })\n  },\n  tick: function (time, timeDelta) {\n    let directionVec3 = this.directionVec3\n    let targetPosition = new THREE.Vector3()\n    targetPosition.x = 2\n    targetPosition.y = 0\n    targetPosition.z = 0\n    console.log(directionVec3)\n\n    let currentPosition = this.el.object3D.position\n\n    directionVec3.copy(targetPosition).sub(currentPosition);\n\n    let distance = directionVec3.length();\n\n    if (distance < 1) {\n      return\n    }\n\n    let factor = this.data.speed / distance\n    let axis = ['x', 'y', 'z']\n    axis.forEach(function (axis) {\n      directionVec3[axis] *= factor * (0.001 / 1000);\n    })\n\n    this.el.setAttribute('position', {\n      x: currentPosition.x + directionVec3.x,\n      y: currentPosition.y + directionVec3.y,\n      z: currentPosition.z + directionVec3.z\n    })\n  }\n})","const extendDeep = AFRAME.utils.extendDeep\n\nconst meshMixin = AFRAME.primitives.getMeshMixin()\n\nAFRAME.registerPrimitive('a-enemy', extendDeep({}, meshMixin, {\n  defaultComponents: {\n    enemy: { speed: '1000' },\n    geometry: {primitive: 'box'},\n    scale: '0.2 0.2 0.2'\n  },\n  mappings: {\n    depth: 'geometry.depth',\n    height: 'geometry.height',\n    width: 'geometry.width',\n    target: 'enemy.target'\n  }\n}))","import './components/enemy'\n\nimport './primatives/a-enemy'\n\nwindow.onload = function () {\n  let newEnemy  = document.createElement('a-enemy')\n  document.getElementById('scene').appendChild(newEnemy)\n}"]}