{"version":3,"sources":["components/enemy.js","primatives/a-enemy.js","index.js"],"names":["AFRAME","registerComponent","type","directionVec3","THREE","Vector3","el","addEventListener","dispatchEvent","CustomEvent","detail","value","getAttribute","entity","parentNode","removeChild","time","timeDelta","targetPosition","x","y","z","currentPosition","object3D","position","copy","sub","distance","length","factor","data","speed","forEach","axis","setAttribute","extendDeep","utils","meshMixin","primitives","getMeshMixin","registerPrimitive","enemyData","GAME_TIMER","window","onload","intervalFunc","gameStart","score","countdown","startButtonElm","document","getElementById","scoreElm","scoreEnemyElm","startingElm","gameoverElm","target","setInterval","newEnemy","createElement","ramdomEnemy","Math","floor","random","seletedEnemyData","model","appendChild","querySelectorAll","e","enemyPosition","evt"],"mappings":"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","file":"example.a4812591.map","sourceRoot":"..","sourcesContent":["AFRAME.registerComponent('enemy', {\n  schema: {\n    speed: {type: 'number'}\n  },\n  init: function () {\n    this.directionVec3 = new THREE.Vector3()\n\n    this.el.addEventListener('mousedown', () => {\n      window.dispatchEvent(new CustomEvent('add-score', { detail: { value: this.el.getAttribute('position') } }))\n      let entity = this.el\n      entity.parentNode.removeChild(entity)\n    })\n  },\n  tick: function (time, timeDelta) {\n    let directionVec3 = this.directionVec3\n    let targetPosition = new THREE.Vector3()\n    targetPosition.x = 1.3\n    targetPosition.y = 0\n    targetPosition.z = 0\n\n    let currentPosition = this.el.object3D.position\n\n    directionVec3.copy(targetPosition).sub(currentPosition);\n\n    let distance = directionVec3.length();\n\n    if (distance < 1) {\n      let entity = this.el\n      entity.parentNode.removeChild(entity)\n      window.dispatchEvent(new CustomEvent('remove-score', { detail: { value: this.el.getAttribute('position') } }))\n      return\n    }\n\n    let factor = this.data.speed / distance\n    let axis = ['x', 'y', 'z']\n    axis.forEach(function (axis) {\n      directionVec3[axis] *= factor * (0.01 / 1000)\n    })\n\n    this.el.setAttribute('position', {\n      x: currentPosition.x + directionVec3.x,\n      y: currentPosition.y + directionVec3.y,\n      z: currentPosition.z + directionVec3.z\n    })\n  }\n})","const extendDeep = AFRAME.utils.extendDeep\n\nconst meshMixin = AFRAME.primitives.getMeshMixin()\n\nAFRAME.registerPrimitive('a-enemy', {\n  defaultComponents: {\n    enemy: { speed: '1000' },\n    'animation-mixer': '',\n    position: '-1 0 0',\n    scale: '0.3 0.3 0.3',\n    rotation: \"0 90 0\"\n  },\n  mappings: {\n    speed: 'enemy.speed'\n  }\n})","import './components/enemy'\n\nimport './primatives/a-enemy'\n\nconst enemyData = [\n  {\n    model: '#bad-boss'\n  },\n  {\n    model: '#caveman'\n  },\n  {\n    model: '#dictator'\n  }\n]\n\nconst GAME_TIMER = 10\n\nwindow.onload = function () {\n  let intervalFunc = ''\n\n  let gameStart = false\n  let score = 0\n  let countdown = GAME_TIMER\n  let startButtonElm = document.getElementById('start-button')\n  let scoreElm = document.getElementById('score')\n  let scoreEnemyElm = document.getElementById('score-enemy')\n  let startingElm = document.getElementById('starting')\n  let gameoverElm = document.getElementById('gameover')\n\n  startButtonElm.addEventListener('mousedown', evt => {\n    if (!gameStart) {\n      gameStart = true\n      score = 0\n      countdown = GAME_TIMER\n      evt.target.setAttribute('visible', false)\n      startingElm.setAttribute('visible', true)\n      startingElm.setAttribute('value', countdown)\n      scoreEnemyElm.setAttribute('visible', true)\n      scoreEnemyElm.setAttribute('position', '0 -1 0')\n      scoreElm.setAttribute('value', score)\n      gameoverElm.setAttribute('visible', false)\n\n      intervalFunc = setInterval(() => {\n        let newEnemy  = document.createElement('a-enemy')\n        let ramdomEnemy = Math.floor(Math.random() * 3)\n        let seletedEnemyData = enemyData[ramdomEnemy]\n        newEnemy.setAttribute('gltf-model', seletedEnemyData.model)\n        newEnemy.setAttribute('position', '-1 0.5 ' + (Math.random() * 0.5))\n        newEnemy.setAttribute('speed', (Math.random() * 3000))\n        newEnemy.setAttribute('animation-mixer', {})\n        document.getElementById('scene').appendChild(newEnemy)\n\n        countdown -= 1\n        startingElm.setAttribute('value', countdown)\n      }, 1000)\n\n      setTimeout(() => {\n        evt.target.setAttribute('visible', true)\n        startingElm.setAttribute('visible', false)\n        scoreEnemyElm.setAttribute('visible', false)\n        gameoverElm.setAttribute('visible', true)\n\n        document.querySelectorAll('a-enemy').forEach(e => e.parentNode.removeChild(e));\n\n        clearInterval(intervalFunc)\n        gameStart = false\n      }, GAME_TIMER * 1000)\n    }\n  })\n\n  window.addEventListener('add-score', evt => {\n    score += 1\n    scoreElm.setAttribute('value', score)\n\n    let enemyPosition = evt.detail.value\n    enemyPosition.y += 0.5\n\n    scoreEnemyElm.setAttribute('value', '+1')\n    scoreEnemyElm.setAttribute('position', enemyPosition)\n  })\n\n  window.addEventListener('remove-score', evt => {\n    score -= 1\n    scoreElm.setAttribute('value', score)\n\n    scoreEnemyElm.setAttribute('value', '-1')\n    let enemyPosition = evt.detail.value\n    enemyPosition.y += 0.5\n\n    scoreEnemyElm.setAttribute('position', enemyPosition)\n  })\n}"]}